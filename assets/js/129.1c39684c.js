(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{450:function(v,_,e){"use strict";e.r(_);var t=e(4),o=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[_("code",[v._v("not")]),v._v("  vs  "),_("code",[v._v("!")])]),v._v(" "),_("p",[_("code",[v._v("None")]),v._v(" vs  "),_("code",[v._v("null")]),v._v("、"),_("code",[v._v("nil")])]),v._v(" "),_("p",[_("code",[v._v("if")]),v._v(" if-elif-else")]),v._v(" "),_("p",[_("code",[v._v("for")]),v._v("  for name in names")]),v._v(" "),_("p",[_("code",[v._v("while")]),v._v(" while break continue")]),v._v(" "),_("p",[v._v("函数def")]),v._v(" "),_("p",[v._v("​\t"),_("code",[v._v("pass")])]),v._v(" "),_("p",[v._v("​\t默认参数:必须指向不变对象---这不就是缺陷吗?")]),v._v(" "),_("p",[v._v("​\t可变参数:参数前加"),_("code",[v._v("*")]),v._v(",在函数调用时自动组装为一个tuple")]),v._v(" "),_("p",[v._v("​\t关键字参数:"),_("code",[v._v("**kv")]),v._v(",在函数调用时自动组装为一个dict")]),v._v(" "),_("p",[v._v("​\t命名关键字参数需要一个特殊分隔符"),_("code",[v._v("*")]),v._v("，"),_("code",[v._v("*")]),v._v("后面的参数被视为命名关键字参数(如果没有关键字参数时)")]),v._v(" "),_("p",[v._v("结构")]),v._v(" "),_("p",[v._v("​\tlist(tuple) 负索引 append、insert、pop")]),v._v(" "),_("p",[v._v("​\tdict "),_("code",[v._v("in")]),v._v(" or "),_("code",[v._v("get()")])]),v._v(" "),_("p",[v._v("切片")]),v._v(" "),_("p",[v._v("​\t[startIndex:endIndex]")]),v._v(" "),_("p",[v._v("Iteration")]),v._v(" "),_("p",[v._v("​\t下标遍历\tPython内置的"),_("code",[v._v("enumerate")]),v._v("函数可以把一个"),_("code",[v._v("list")]),v._v("变成索引-元素对")]),v._v(" "),_("p",[v._v("​\t列表生成式\t类似语法糖,不舒适")]),v._v(" "),_("p",[v._v("​\t生成器\t直观上是[]与(),next()或for循环,参照C#中的IList、IEnumerable,同样的yield关键字")]),v._v(" "),_("p",[v._v("函数式编程")]),v._v(" "),_("p",[v._v("​\tmap/reduce/filter\t类比lambda.select/aggregate/where")])])}),[],!1,null,null,null);_.default=o.exports}}]);