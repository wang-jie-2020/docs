(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{338:function(t,v,_){"use strict";_.r(v);var a=_(0),e=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"lambda"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#lambda"}},[t._v("#")]),t._v(" lambda")]),t._v(" "),v("h2",{attrs:{id:"java-vs-dotnet"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-vs-dotnet"}},[t._v("#")]),t._v(" java vs dotnet")]),t._v(" "),v("p",[t._v('比较两者的实现意义不大,在查阅的资料中都会这么描述:"简化匿名函数"')]),t._v(" "),v("p",[t._v("两者的实现中的思路近似一致,不同的是ms对这块的封装更简化一些")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Net")]),t._v(" "),v("th",[t._v("Java")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("delegate")]),t._v(" "),v("td",[t._v("FunctionalInterface")])]),t._v(" "),v("tr",[v("td",[t._v("Action"),v("in",{attrs:{T:""}})],1),t._v(" "),v("td",[t._v("Consumer"),v("T",[t._v(" ...")])],1)]),t._v(" "),v("tr",[v("td",[t._v("Func<in T,out R>")]),t._v(" "),v("td",[t._v("Supplier"),v("T",[t._v("、Function<T,R> ...")])],1)])])]),t._v(" "),v("p",[t._v("概括描述就是net以Action、Func的重载概括了必要的lambda形式,java这块提供了间接的")]),t._v(" "),v("p",[t._v("语法上稍有不同包括多播(运算符重载)、方法访问")]),t._v(" "),v("h2",{attrs:{id:"函数式接口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#函数式接口"}},[t._v("#")]),t._v(" 函数式接口")]),t._v(" "),v("p",[t._v("只包含一个抽象方法的接口，称为"),v("strong",[t._v("函数式接口")])]),t._v(" "),v("p",[t._v("通常@FunctionalInterface注解")]),t._v(" "),v("h3",{attrs:{id:"内置的函数式接口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内置的函数式接口"}},[t._v("#")]),t._v(" 内置的函数式接口")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("内置核心函数式接口")]),t._v(" "),v("th",[t._v("包含的方法")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Consumer"),v("T")],1),t._v(" "),v("td",[t._v("void accept(T t)")])]),t._v(" "),v("tr",[v("td",[t._v("BiConsumer<T, U>")]),t._v(" "),v("td",[t._v("void accept(T t, U u)")])]),t._v(" "),v("tr",[v("td",[t._v("Supplier"),v("T")],1),t._v(" "),v("td",[t._v("T get()")])]),t._v(" "),v("tr",[v("td",[t._v("Function<T,R>")]),t._v(" "),v("td",[t._v("R apply(T t)")])]),t._v(" "),v("tr",[v("td",[t._v("BiFunction<T, U, R>")]),t._v(" "),v("td",[t._v("R apply(T t, U u)")])]),t._v(" "),v("tr",[v("td",[t._v("Predicate"),v("T")],1),t._v(" "),v("td",[t._v("boolen test(T t)")])])])]),t._v(" "),v("h3",{attrs:{id:"语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" ::语法")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("引用方式")]),t._v(" "),v("th")])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("构造方法")]),t._v(" "),v("td",[t._v("ClassName:: staticMethodName")])]),t._v(" "),v("tr",[v("td",[t._v("静态方法")]),t._v(" "),v("td",[t._v("ClassName :: new")])]),t._v(" "),v("tr",[v("td",[t._v("任意实例方法")]),t._v(" "),v("td",[t._v("ClassName :: methodName")])]),t._v(" "),v("tr",[v("td",[t._v("指定实例方法")]),t._v(" "),v("td",[t._v("instance :: methodName")])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);