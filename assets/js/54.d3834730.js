(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{345:function(t,r,e){"use strict";e.r(r);var v=e(0),_=Object(v.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:""}},[r("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" 🕳")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("swagger")]),t._v(" "),r("p",[t._v("springboot2.5不需要额外配置")]),t._v(" "),r("p",[t._v("springboot2.6以上报错,需要额外补入MVC配置,二选一")]),t._v(" "),r("p",[t._v("​\t@EnableMVC")]),t._v(" "),r("p",[t._v("​\tspring.mvc.pathmatch.strategy="),r("em",[t._v("ant_path_matcher")])])]),t._v(" "),r("li",[r("p",[t._v("跨域配置")]),t._v(" "),r("p",[t._v("在spring-mvc中的WebMvcConfigurer.addCorsMappings()中可以做到跨域")]),t._v(" "),r("p",[t._v("但一旦和SpringSecurity结合使用就不能正常运行,这个结果是因为SpringSecurity注册的过滤器拦截了跨域的预检请求(到不了spring中)")]),t._v(" "),r("p",[t._v("1.不使用mvc的配置,而是通过CorsFilter的Bean")]),t._v(" "),r("p",[t._v("2.httpSecurity.addFilterBefore(corsFilter, JwtAuthenticationTokenFilter.class);")]),t._v(" "),r("p",[t._v("​")])]),t._v(" "),r("li",[r("p",[t._v('@PreAuthorize("permitAll")注解还是会拦截401')]),t._v(" "),r("p",[t._v("内部机制问题,由httpSecurity.anyRequest().authenticated()引起")]),t._v(" "),r("p",[t._v("有点莫名其妙...")]),t._v(" "),r("p",[t._v("网上的回答更加莫名其妙...")])])])])}),[],!1,null,null,null);r.default=_.exports}}]);