(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{418:function(t,a,s){"use strict";s.r(a);var e=s(4),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"adapter模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adapter模式"}},[t._v("#")]),t._v(" adapter模式")]),t._v(" "),a("p",[t._v("适配模式,指的是新的接口通过适配器访问原有接口,保持尽可能少的修改变更.")]),t._v(" "),a("p",[t._v("业务场景中很少尝试,原因是大多数情况对api的调用封装只会考虑到一层,例如以api包装或者helper处理,但实际上这两类方式不一定完全符合设计约束,或者说基本不符合程序设计思路")]),t._v(" "),a("p",[t._v("可参考的实例是基于autofac-castle-dynamicProxy的castle-core-asyncInterceptor的abp封装,这里主要梳理逻辑而不是代码示例.")]),t._v(" "),a("p",[t._v("按示例代码逻辑梳理出来的调用过程:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("adapter 入口")]),t._v(" "),a("p",[t._v("继承或实现组件接口,实现泛型注入(通常为构造函数继承重写)")])]),t._v(" "),a("li",[a("p",[t._v("adapter 调用")]),t._v(" "),a("p",[t._v("在入口组件中对核心调用过程重构.通过1个或多个适配器组织参数或者方法调用,同时注入自己的逻辑处理和自己的逻辑参数,替换或者追加")])]),t._v(" "),a("li",[a("p",[t._v("adapter 参数")]),t._v(" "),a("p",[t._v("如非必要,简单类型参数还是尽量包装,非简单类型的参数还是通过适配过程更合适")]),t._v(" "),a("p",[t._v("在适配过程中甚至可以插入新的代码逻辑函数委托")])])]),t._v(" "),a("p",[t._v("最终过程是以原组件注册-触发->进入重写的入口实现->进入adapter中的新逻辑和方法,同时传递原接口必要信息->调用adapter方法")]),t._v(" "),a("h2",{attrs:{id:"hash和md5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash和md5"}},[t._v("#")]),t._v(" hash和md5")]),t._v(" "),a("p",[t._v("哈希算法也称摘要算法、散列算法，哈希函数的输入为一段"),a("strong",[t._v("可变长度x")]),t._v("，输出一"),a("strong",[t._v("固定长度串")]),t._v("，该串被称为"),a("strong",[t._v("x的哈希值")]),t._v("。Hash函数满足以下几个基本需求：")]),t._v(" "),a("p",[t._v("（1）输入值x为任意长度")]),t._v(" "),a("p",[t._v("（2）输出值长度固定")]),t._v(" "),a("p",[t._v("（3）单向函数，算法不可逆")]),t._v(" "),a("p",[t._v("（4）唯一性，很难找到两个不同的输入会得到相同的Hash输出值")]),t._v(" "),a("p",[t._v("md5是hashlib模块里的一个方法，是用来做加密算法的，注意他是不能解密的。")]),t._v(" "),a("h2",{attrs:{id:"signalr底板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#signalr底板"}},[t._v("#")]),t._v(" signalR底板")]),t._v(" "),a("p",[t._v("底板针对的也就是连接数量太多增加了集群负载均衡之后进行的多server同步发送，但似乎有点难以处理逻辑（指的是由自主控制的）")]),t._v(" "),a("p",[t._v("一种比较简单的做法是客户端直连数据中间件，比如MQ、Redis...")]),t._v(" "),a("p",[t._v("通常的demo中都是混合api和hub的，通信通过HubContext，这种方式似乎耦合性高而且也很难继续优化，提供的如redis底板方案最终的落地还是要考虑负载均衡")]),t._v(" "),a("p",[t._v("如果将hub-server从逻辑中拿走，可能效果更好，思路大概如下：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("客户端http请求api-server，得到hub-server的url，通过某种算法持久")])]),t._v(" "),a("li",[a("p",[t._v("客户端连接hub-server，持久化连接")])]),t._v(" "),a("li",[a("p",[t._v("api-server通过httpClient请求hub-server，传输消息")])]),t._v(" "),a("li",[a("p",[t._v("hub-server向客户端输出")])])]),t._v(" "),a("h2",{attrs:{id:"自包含部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自包含部署"}},[t._v("#")]),t._v(" 自包含部署")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://learn.microsoft.com/zh-cn/dotnet/core/deploying/deploy-with-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v(".NET CLI 发布 .NET 应用"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("dotnet publish "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" Release "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" win10-x64 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" %outPut% --self-contained "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\ndotnet publish "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" Release "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" linux-x64 --self-contained "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"system-drawing验证码the-type-initializer-for-gdip-threw-an-exception"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#system-drawing验证码the-type-initializer-for-gdip-threw-an-exception"}},[t._v("#")]),t._v(" System.Drawing验证码The type initializer for 'Gdip' threw an exception.")]),t._v(" "),a("p",[t._v("Linux部署时由于System.Drawing.Common的路线问题会出现如上错误，这个错误的官方释疑：")]),t._v(" "),a("p",[t._v("https://learn.microsoft.com/zh-cn/dotnet/core/compatibility/core-libraries/6.0/system-drawing-common-windows-only")]),t._v(" "),a("p",[t._v("补充阅读 https://devblogs.microsoft.com/dotnet/net-core-image-processing/")]),t._v(" "),a("p",[t._v("目前可以查询到有些包依赖于此，比如EPPlus的较旧版本。")]),t._v(" "),a("p",[t._v("目前比较合适的nuget：https://gitee.com/pojianbing/lazy-captcha")]),t._v(" "),a("p",[t._v("imageSharp许可证有问题，SkiaSharp也许是最合适目前的（在Linux上可能需要再依赖于官方提供的其他依赖）")]),t._v(" "),a("h2",{attrs:{id:"c-使用python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-使用python"}},[t._v("#")]),t._v(" C#使用PYTHON")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("C++的动态库链接(套个中间层)")])]),t._v(" "),a("li",[a("p",[t._v("IronPython")]),t._v(" "),a("p",[t._v("https://github.com/IronLanguages/ironpython3")]),t._v(" "),a("p",[t._v("https://github.com/IronLanguages/ironpython3/blob/master/Documentation/package-compatibility.md")])]),t._v(" "),a("li",[a("p",[t._v("Pythonnet")]),t._v(" "),a("p",[t._v("https://github.com/pythonnet/pythonnet")])])]),t._v(" "),a("h2",{attrs:{id:"nginx之forward头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx之forward头"}},[t._v("#")]),t._v(" Nginx之Forward头")]),t._v(" "),a("p",[t._v("http规范里对请求头的定义、兼容废弃等标志的很清楚, 按需再查吧.")]),t._v(" "),a("p",[t._v("这里针对的是经过Nginx转发之后的Scheme、Host等进行标识和转存, NetCore中已有相关集成")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("proxy_set_header X-Forwarded-Host $the_host/onlyoffice;\nproxy_set_header X-Forwarded-Proto $the_scheme;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n")])])]),a("h2",{attrs:{id:"opengauss中pgsql驱动问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#opengauss中pgsql驱动问题"}},[t._v("#")]),t._v(" OPENGAUSS中PGSQL驱动问题")]),t._v(" "),a("p",[t._v("在ORACLE迁移OPENGAUSS时，NVARCHAR2的类型同样迁移，但OPENGAUSS使用的是PGSQL的连接库，而PGSQL中是不存在此类型的。")]),t._v(" "),a("p",[t._v("在JAVA中，通过JDBC正常可以通过查询语句得到ResultSet，而在Net中，报错‘System.Object’‘nvarchar2’....")]),t._v(" "),a("p",[t._v("https://stackoverflow.com/questions/24014147/how-to-convert-string-to-unicode-using-postgresql/24015093#24015093")]),t._v(" "),a("h2",{attrs:{id:"jwt字段名-userid写在-sub-字段-认证中间件失效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt字段名-userid写在-sub-字段-认证中间件失效"}},[t._v("#")]),t._v(" JWT字段名---userid写在'sub'字段,认证中间件失效?")]),t._v(" "),a("p",[t._v("sub 字段作为唯一标识符在各个方面都没有问题,,,微软为什么要强制mapping很长一串的标准值而不是直接的字符 ???")]),t._v(" "),a("h2",{attrs:{id:"apicontroller标注-自动模型验证且不经过模型绑定检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apicontroller标注-自动模型验证且不经过模型绑定检查"}},[t._v("#")]),t._v(" ApiController标注--自动模型验证且不经过模型绑定检查")]),t._v(" "),a("p",[t._v("如题,这种问题有点二.")]),t._v(" "),a("p",[t._v("see https://learn.microsoft.com/zh-cn/aspnet/core/web-api/?view=aspnetcore-9.0#apicontroller-attribute")]),t._v(" "),a("p",[t._v("see https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.aspnetcore.mvc.apibehavioroptions?view=aspnetcore-9.0")]),t._v(" "),a("h2",{attrs:{id:"uri和url编码-escapedatastring、escapeuristring和urlencode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uri和url编码-escapedatastring、escapeuristring和urlencode"}},[t._v("#")]),t._v(" URI和URL编码：EscapeDataString、EscapeUriString和UrlEncode")]),t._v(" "),a("p",[a("code",[t._v("Uri.EscapeDataString")])]),t._v(" "),a("p",[t._v("​\t用于对URI的数据部分进行编码,将所有非字母数字字符（包括空格）转换为其百分号编码形式")]),t._v(" "),a("p",[t._v("​\t和JS中的"),a("code",[t._v("encodeURIComponent")]),t._v("一致")]),t._v(" "),a("p",[a("code",[t._v("Uri.EscapeUriString")])]),t._v(" "),a("p",[t._v("​\t对整个URI进行编码,保留URI中的保留字符（如"),a("code",[t._v("?")]),t._v("、"),a("code",[t._v("/")]),t._v("、"),a("code",[t._v("#")]),t._v("等），不对它们进行编码")]),t._v(" "),a("p",[t._v("​\t"),a("strong",[t._v("和浏览器行为一致,但它被标记为弃用了")])]),t._v(" "),a("p",[t._v("​\t和JS中的"),a("code",[t._v("encodeURI")]),t._v("一致")]),t._v(" "),a("p",[t._v("encodeURIComponent(proxy.$base64.encode(encodeURI(row.fileUrl)));")]),t._v(" "),a("h2",{attrs:{id:"请求处理管道图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求处理管道图"}},[t._v("#")]),t._v(" 请求处理管道图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.gitcode.com/qq_36179938/images/raw/main/900440-20230430112047263-366313603.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"transactionscope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transactionscope"}},[t._v("#")]),t._v(" TransactionScope")]),t._v(" "),a("p",[t._v("select for update")]),t._v(" "),a("p",[t._v("select with tablelock")]),t._v(" "),a("p",[t._v("select with nolock")]),t._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" scope "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("TransactionScope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TransactionScopeOption"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Suppress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" scope "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("TransactionScope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n     TransactionScopeOption"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Required"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("TransactionOptions")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" IsolationLevel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IsolationLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReadUncommitted "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);