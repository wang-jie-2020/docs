(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{462:function(t,s,a){"use strict";a.r(s);var n=a(4),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、语言基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、语言基础"}},[t._v("#")]),t._v(" 一、语言基础")]),t._v(" "),s("h3",{attrs:{id:"_1-1-数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-数据"}},[t._v("#")]),t._v(" 1.1 数据")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("整数、浮点数、字符串、布尔、空值")])]),t._v(" "),s("li",[s("p",[t._v("字符格式化")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("r''")]),t._v("表示"),s("code",[t._v("''")]),t._v("内部的字符串默认不转义")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("'''...'''")]),t._v("的格式表示多行内容")])]),t._v(" "),s("li",[s("p",[t._v("格式化")]),t._v(" "),s("p",[t._v("(1)%  (2)format  (3)f-string")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# %s %d %f ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Age: %s. Gender: %s'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .format")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, {0}, 成绩提升了 {1:.1f}%'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小明'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17.125")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# f'{}'中的替换")]),t._v("\nr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.5")]),t._v("\ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("f'The area of a circle with radius ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" is ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(".2f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])])])])])]),t._v(" "),s("h3",{attrs:{id:"_1-2-条件、循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-条件、循环"}},[t._v("#")]),t._v(" 1.2 条件、循环")]),t._v(" "),s("h4",{attrs:{id:"条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件"}},[t._v("#")]),t._v(" 条件")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("if-elif-else")])]),t._v(" "),s("li",[s("p",[t._v("match-case")]),t._v(" "),s("p",[t._v("case _: \t# _表示匹配到其他任何情况")]),t._v(" "),s("p",[t._v("高级一些的玩法包括")]),t._v(" "),s("p",[t._v("​\t合并模式 --- case 200|201: description = 'Success'")]),t._v(" "),s("p",[t._v("​\t匹配模式(不太确定名字), 如下")])])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gcc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello.c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world.c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# args = ['clean']")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# args = ['gcc']")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果仅出现gcc，报错:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gcc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gcc: missing source file(s).'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 出现gcc，且至少指定了一个文件:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gcc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("files"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gcc compile: '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" file1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅出现clean:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'clean'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'clean'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("_")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'invalid command.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("h4",{attrs:{id:"循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[t._v("#")]),t._v(" 循环")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("for-in")]),t._v(" "),s("p",[t._v("for name in names")])])]),t._v(" "),s("p",[t._v("​\tfor row, name in enumerate(names)")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("while-break-continue")])]),t._v(" "),s("h2",{attrs:{id:"二、常用数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、常用数据结构"}},[t._v("#")]),t._v(" 二、常用数据结构")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",[t._v("列表 (List)")]),t._v(" "),s("th",[t._v("元组 (Tuple)")]),t._v(" "),s("th",[t._v("集合 (Set)")]),t._v(" "),s("th",[t._v("字典 (Dictionary)")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("可变性")])]),t._v(" "),s("td",[t._v("可变")]),t._v(" "),s("td",[t._v("不可变")]),t._v(" "),s("td",[t._v("可变")]),t._v(" "),s("td",[t._v("可变")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("元素类型")])]),t._v(" "),s("td",[t._v("任意类型（可包含可变/不可变对象）")]),t._v(" "),s("td",[t._v("任意类型（可包含可变/不可变对象）")]),t._v(" "),s("td",[t._v("必须为不可变对象（可哈希）")]),t._v(" "),s("td",[t._v("键必须为不可变对象，值可为任意类型")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("有序性")])]),t._v(" "),s("td",[t._v("有序")]),t._v(" "),s("td",[t._v("有序")]),t._v(" "),s("td",[t._v("无序")]),t._v(" "),s("td",[t._v("有序（Python 3.7+）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("允许重复元素")])]),t._v(" "),s("td",[t._v("是")]),t._v(" "),s("td",[t._v("是")]),t._v(" "),s("td",[t._v("否")]),t._v(" "),s("td",[t._v("键唯一，值可重复")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("语法示例")])]),t._v(" "),s("td",[s("code",[t._v("[1, 'a', [2]]")])]),t._v(" "),s("td",[s("code",[t._v("(1, 'a', [2])")])]),t._v(" "),s("td",[s("code",[t._v("{1, 2, 3}")])]),t._v(" "),s("td",[s("code",[t._v("{'key1': 10, 'key2': 20}")])])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("适用场景")])]),t._v(" "),s("td",[t._v("动态数据集合，需频繁增删改查")]),t._v(" "),s("td",[t._v("固定数据集合（如配置项、常量）")]),t._v(" "),s("td",[t._v("去重、快速成员检查、集合运算（交并差）")]),t._v(" "),s("td",[t._v("键值对映射，快速通过键查找值")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("是否支持索引")])]),t._v(" "),s("td",[t._v("是（"),s("code",[t._v("list[0]")]),t._v("）")]),t._v(" "),s("td",[t._v("是（"),s("code",[t._v("tuple[0]")]),t._v("）")]),t._v(" "),s("td",[t._v("否")]),t._v(" "),s("td",[t._v("通过键访问（"),s("code",[t._v("dict['key']")]),t._v("）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("内存占用")])]),t._v(" "),s("td",[t._v("较高（因预留空间）")]),t._v(" "),s("td",[t._v("较低（不可变，存储紧凑）")]),t._v(" "),s("td",[t._v("高（哈希表实现）")]),t._v(" "),s("td",[t._v("高（哈希表实现）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("底层实现")])]),t._v(" "),s("td",[t._v("动态数组")]),t._v(" "),s("td",[t._v("静态数组")]),t._v(" "),s("td",[t._v("哈希表")]),t._v(" "),s("td",[t._v("哈希表")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-1-切片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-切片"}},[t._v("#")]),t._v(" 2.1 切片")]),t._v(" "),s("p",[t._v("形如"),s("code",[t._v("[start:end:stride]")]),t._v("的运算符，其中"),s("code",[t._v("start")]),t._v("代表访问列表元素的起始位置，"),s("code",[t._v("end")]),t._v("代表访问列表元素的终止位置（终止位置的元素无法访问），而"),s("code",[t._v("stride")]),t._v("则代表了跨度，简单的说就是位置的增量。")]),t._v(" "),s("h3",{attrs:{id:"_2-2-常见操作方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-常见操作方法"}},[t._v("#")]),t._v(" 2.2 常见操作方法")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("+")]),t._v(" 和 "),s("code",[t._v("*")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("in")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("append")]),t._v("、"),s("code",[t._v("insert")]),t._v("、"),s("code",[t._v("remove")]),t._v("、"),s("code",[t._v("pop")]),t._v("、"),s("code",[t._v("index")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("dict.get")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-3-补充-dict的键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-补充-dict的键"}},[t._v("#")]),t._v(" 2.3 补充-dict的键")]),t._v(" "),s("p",[t._v("在Python中，只有不可变类型的对象才是可哈希的，例如整数、浮点数、字符串和元组。自定义类默认是不可哈希的，因为它们通常是可变的。")]),t._v(" "),s("p",[s("s",[t._v("但是可以进行一些操作如定义不可变属性，"),s("code",[t._v("hash")]),t._v(" 和 "),s("code",[t._v("eq")]),t._v("方法（估计很少，不再深究）")])]),t._v(" "),s("h2",{attrs:{id:"三、函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、函数"}},[t._v("#")]),t._v(" 三、函数")]),t._v(" "),s("h3",{attrs:{id:"_1-1-参数顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-参数顺序"}},[t._v("#")]),t._v(" 1.1 参数顺序")]),t._v(" "),s("p",[t._v("参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。")]),t._v(" "),s("p",[s("code",[t._v("*args")]),t._v("是可变参数，args接收的是一个tuple；")]),t._v(" "),s("p",[s("code",[t._v("**kw")]),t._v("是关键字参数，kw接收的是一个dict。")]),t._v(" "),s("p",[t._v("默认参数中需注意指向不可变对象, add_end(L=[]) 在不传实参时有指向问题")]),t._v(" "),s("h3",{attrs:{id:"_1-2-装饰器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-装饰器"}},[t._v("#")]),t._v(" 1.2 装饰器")]),t._v(" "),s("p",[t._v("@decorator 等价于 func = decorator(func)，参照Aop理解")]),t._v(" "),s("p",[t._v("函数签名 wrapper(*args,**kw), 一个例子：")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# text是装饰器参数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decorator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@functools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wraps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解决name问题")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" wrapper\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" decorator\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("常见装饰器: @property、@dataclass")]),t._v(" "),s("h3",{attrs:{id:"_1-3-偏函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-偏函数"}},[t._v("#")]),t._v(" 1.3 偏函数")]),t._v(" "),s("p",[t._v("偏函数（Partial function）有点类似于静态扩展方法")]),t._v(" "),s("p",[t._v("简单总结"),s("code",[t._v("functools.partial")]),t._v("的作用就是，把一个函数的某些参数给固定住（也就是设置默认值），返回一个新的函数，调用这个新函数会更简单。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("int2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" functools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("partial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nint8 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" functools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("partial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1001'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 9")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1001'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 513")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"_1-4-lambda函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-lambda函数"}},[t._v("#")]),t._v(" 1.4 Lambda函数")]),t._v(" "),s("p",[t._v("关键字"),s("code",[t._v("lambda")]),t._v("表示匿名函数，冒号前面的"),s("code",[t._v("x")]),t._v("表示函数参数。")]),t._v(" "),s("p",[t._v("map(f, [x1, x2, x3, x4]) = f(x1),f(x2),f(x3),f(x4)")]),t._v(" "),s("p",[t._v("reduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)")]),t._v(" "),s("p",[t._v("map/reduce/filter\t类比lambda.select/aggregate/where")]),t._v(" "),s("h2",{attrs:{id:"四、面向对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、面向对象"}},[t._v("#")]),t._v(" 四、面向对象")]),t._v(" "),s("h3",{attrs:{id:"动态特性、继承多态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态特性、继承多态"}},[t._v("#")]),t._v(" 动态特性、继承多态")]),t._v(" "),s("p",[t._v("实例并不像静态语言那样'继承'类属性，比如在静态语言中类必须实例化才有对象的概念，非静态的成员是无法被直接访问的，但在python中更像一种拷贝")]),t._v(" "),s("p",[s("em",[t._v("个人理解：继承实际上就是绑定了一个当前实例的dict -> 类的dict,,,如果实例新增或重写属性那么就新增实例的dict中的属性，否则就直接链向类的dict")])]),t._v(" "),s("p",[t._v("允许多重继承, DAG排序, https://www.jianshu.com/p/c9a0b055947b")]),t._v(" "),s("h3",{attrs:{id:"静态方法和类方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态方法和类方法"}},[t._v("#")]),t._v(" 静态方法和类方法")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@staticmethod")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_valid")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""判断三条边长能否构成三角形(静态方法)"""')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@classmethod")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_valid")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("判断三条边长能否构成三角形"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("类方法"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v('"\n     '),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h3",{attrs:{id:"预定义方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预定义方法"}},[t._v("#")]),t._v(" 预定义方法")]),t._v(" "),s("p",[s("code",[t._v("__init__")]),t._v("、"),s("code",[t._v("__slots__")])]),t._v(" "),s("p",[s("code",[t._v("__repr__")]),t._v(" "),s("code",[t._v("__str__")])]),t._v(" "),s("h2",{attrs:{id:"五、进程、线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、进程、线程"}},[t._v("#")]),t._v(" 五、进程、线程")]),t._v(" "),s("p",[t._v("https://www.cnblogs.com/midworld/p/14614640.html")]),t._v(" "),s("p",[t._v("https://www.cnblogs.com/midworld/p/14614634.html")]),t._v(" "),s("h3",{attrs:{id:"multiprocessing-process"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multiprocessing-process"}},[t._v("#")]),t._v(" multiprocessing.Process")]),t._v(" "),s("p",[t._v("multiprocessing.Process(group=None, target=None, name=None, args=(), kwargs={}, *, daemon=None)")]),t._v(" "),s("p",[t._v("multiprocessing.Pool(processes=None, initializer=None, initargs=(), maxtasksperchild=None)")]),t._v(" "),s("p",[t._v("​\tapply(func, args=(), kwds={}, callback=None, error_callback=None)")]),t._v(" "),s("p",[t._v("​\tapply_async(func, args=(), kwds={}, callback=None, error_callback=None)")]),t._v(" "),s("p",[t._v("​\tmap(func, iterable, chunksize=None)")]),t._v(" "),s("p",[t._v("​\tmap_async(func, iterable, chunksize=None, callback=None, error_callback=None)")]),t._v(" "),s("h4",{attrs:{id:"进程间通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程间通信"}},[t._v("#")]),t._v(" 进程间通信")]),t._v(" "),s("p",[t._v("每个进程是相互独立的，内存无法共享，实现进程间数据共享的方式有：")]),t._v(" "),s("ul",[s("li",[t._v("multiprocessing.Value(typecode_or_type, *args, lock=True)：共享单个数据，共享内存")]),t._v(" "),s("li",[t._v("multiprocessing.Array(typecode_or_type, size_or_initializer, *, lock=True)：共享数组，共享内存")]),t._v(" "),s("li",[t._v("multiprocessing.Manager(`：共享进程，支持多种数据结构的数据共享")])]),t._v(" "),s("p",[t._v("Manager 支持的类型有：list,dict,Namespace,Lock,RLock,Semaphore,BoundedSemaphore,Condition,Event,Queue,Value和Array，"),s("strong",[t._v("不仅可以在本地进程间共享，甚至可以在多客户端实现网络共享")]),t._v("，不过 Manager占用资源较大。")]),t._v(" "),s("h3",{attrs:{id:"concurrent-futures-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concurrent-futures-模块"}},[t._v("#")]),t._v(" concurrent.futures 模块")]),t._v(" "),s("div",{staticClass:"language-PYTHON line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" concurrent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("futures"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ProcessPoolExecutor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("submit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run_proc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run_proc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" concurrent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("futures"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ThreadPoolExecutor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("submit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run_proc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run_proc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("code",[t._v("Future")]),t._v(" 类封装了可调用对象的异步执行，由 "),s("code",[t._v("Executor.submit()")]),t._v(" 产生, 可以操作处理状态以及增加回调、处理错误等；")])])}),[],!1,null,null,null);s.default=r.exports}}]);